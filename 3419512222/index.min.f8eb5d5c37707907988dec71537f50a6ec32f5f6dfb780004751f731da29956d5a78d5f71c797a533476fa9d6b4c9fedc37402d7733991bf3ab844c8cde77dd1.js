var suggestions=document.getElementById('suggestions'),userinput=document.getElementById('userinput');document.addEventListener('keydown',inputFocus);function inputFocus(a){a.keyCode===191&&(a.preventDefault(),userinput.focus()),a.keyCode===27&&(userinput.blur(),suggestions.classList.add('d-none'))}document.addEventListener('click',function(a){var b=suggestions.contains(a.target);b||suggestions.classList.add('d-none')}),document.addEventListener('keydown',suggestionFocus);function suggestionFocus(b){const d=suggestions.querySelectorAll('a'),e=[...d],a=e.indexOf(document.activeElement);let c=0;b.keyCode===38?(b.preventDefault(),c=a>0?a-1:0,d[c].focus()):b.keyCode===40&&(b.preventDefault(),c=a+1<e.length?a+1:a,d[c].focus())}(function(){var b=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:'id',store:["href","title","description"],index:["title","description","content"]}});b.add({id:0,href:"https://deadsfu.com/3419512222/docs/tutorials/install/",title:"Install",description:"How to install DeadSFU.",content:'\u003cul\u003e\n\u003cli\u003e\u003ca href="#linux-on-intel-amd64"\u003eLinux on Intel, AMD64\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="#linux-on-arm64"\u003eLinux on ARM64\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="#macos-intel-cpu"\u003emacOS Intel CPU\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="#macos-apple-cpu"\u003emacOS Apple CPU\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="#docker"\u003eDocker\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="#windows-intel-amd64"\u003eWindows Intel, AMD64\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="#windows-arm"\u003eWindows ARM\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href="#compile-from-source"\u003eCompile from Source\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id="linux-on-intel-amd64"\u003eLinux on Intel, AMD64\u003c/h2\u003e\n\u003cp\u003eDownload, untar\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecurl -sL https://github.com/x186k/deadsfu/releases/latest/download/deadsfu-linux-amd64.tar.gz | tar xvz\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eJump to \u003ca href="/docs/tutorials/startingdeadsfu/"\u003eStarting DeadSFU\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id="linux-on-arm64"\u003eLinux on ARM64\u003c/h2\u003e\n\u003cp\u003eDownload, untar\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecurl -sL https://github.com/x186k/deadsfu/releases/latest/download/deadsfu-linux-arm64.tar.gz | tar xvz\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eJump to \u003ca href="/docs/tutorials/startingdeadsfu/"\u003eStarting DeadSFU\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id="macos-intel-cpu"\u003emacOS Intel CPU\u003c/h2\u003e\n\u003cp\u003eDownload, untar\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecurl -sL https://github.com/x186k/deadsfu/releases/latest/download/deadsfu-darwin-amd64.tar.gz | tar xvz\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eJump to \u003ca href="/docs/tutorials/startingdeadsfu/"\u003eStarting DeadSFU\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id="macos-apple-cpu"\u003emacOS Apple CPU\u003c/h2\u003e\n\u003cp\u003eDownload, untar\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecurl -sL https://github.com/x186k/deadsfu/releases/latest/download/deadsfu-darwin-arm64.tar.gz | tar xvz\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eJump to \u003ca href="/docs/tutorials/startingdeadsfu/"\u003eStarting DeadSFU\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id="docker"\u003eDocker\u003c/h2\u003e\n\u003cp\u003e\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003eðŸ’¡ \u003c/div\u003e\n  \n    \u003cdiv class="w-100"\u003eDocker is tightly coupled with the Linux kernel. For performance reasons we recommend only using \u003ccode\u003eDeadSFU\u003c/code\u003e with Docker on Linux systems. \u003c/div\u003e\n  \n\u003c/div\u003e\n\nPull the image\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003edocker pull x186k/deadsfu\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eJump to \u003ca href="/docs/tutorials/startingdeadsfu/"\u003eStarting DeadSFU\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id="windows-intel-amd64"\u003eWindows Intel, AMD64\u003c/h2\u003e\n\u003cp\u003e\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003eðŸ’¡ \u003c/div\u003e\n  \n    \u003cdiv class="w-100"\u003eThese directions work on Windows 10 build# \u003e=17063 or Windows Server 2019 \u003c/div\u003e\n  \n\u003c/div\u003e\n\nDownload, untar\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecurl  https://github.com/x186k/deadsfu/releases/latest/download/deadsfu-windows-amd64.zip -sLo tmp \u0026amp;\u0026amp; tar -xvf tmp \u0026amp;\u0026amp; del tmp\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eJump to \u003ca href="/docs/tutorials/startingdeadsfu/"\u003eStarting DeadSFU\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id="windows-arm"\u003eWindows ARM\u003c/h2\u003e\n\u003cp\u003e\u003cem\u003econtact us if you need Windows/ARM binaries, or submit a PR after Go 1.17 release\u003c/em\u003e\u003c/p\u003e\n\u003ch2 id="compile-from-source"\u003eCompile from Source\u003c/h2\u003e\n\u003cp\u003eThere are two repos you need to compile from source: \u003ccode\u003edeadsfu\u003c/code\u003e and \u003ccode\u003edeadsfu-binaries\u003c/code\u003e.\n\u003ccode\u003edeadsfu-binaries\u003c/code\u003e must be nested inside \u003ccode\u003edeadsfu\u003c/code\u003e when compiling.\u003c/p\u003e\n\u003cp\u003eYou don\u0026rsquo;t need archane git tools like \u003ccode\u003egit lfs\u003c/code\u003e or \u003ccode\u003egit submodules\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eYou need a version of Go greater than 1.16, we recommend 1.16.5 or later.\u003c/p\u003e\n\u003cp\u003eClone the main repo:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/x186k/deadsfu.git\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eChange dir:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ecd deadsfu\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eClone the binaries repo:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003egit clone https://github.com/x186k/deadsfu-binaries.git\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eBuild with Go:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003ego build .\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eJump to \u003ca href="/docs/tutorials/startingdeadsfu/"\u003eStarting DeadSFU\u003c/a\u003e.\u003c/p\u003e\n'}).add({id:1,href:"https://deadsfu.com/3419512222/docs/tutorials/startingdeadsfu/",title:"Browser-in and Browser-out",description:"How to run DeadSFU.",content:'\u003ch3 id="start-the-sfu"\u003eStart the SFU:\u003c/h3\u003e\n\u003cp\u003eYou should have a file: \u003ccode\u003edeadsfu\u003c/code\u003e or \u003ccode\u003edeadsfu.exe\u003c/code\u003e, or Docker image ready.\u003c/p\u003e\n\u003cul class="nav nav-tabs" id="runtab" role="tablist"\u003e\u003cli class="nav-item"\u003e\n        \u003cbutton data-bs-toggle="tab" class="nav-link active" data-bs-target="#runtab-0" type="button" role="tab"\n            aria-controls="runtab-0" aria-selected="true"\u003eLinux or macOS\u003c/button\u003e\n    \u003c/li\u003e\n    \n    \u003cli class="nav-item"\u003e\n        \u003cbutton data-bs-toggle="tab" class="nav-link" data-bs-target="#runtab-1" type="button" role="tab"\n            aria-controls="runtab-1" aria-selected="false"\u003eWindows\u003c/button\u003e\n    \u003c/li\u003e\n    \u003cli class="nav-item"\u003e\n        \u003cbutton data-bs-toggle="tab" class="nav-link" data-bs-target="#runtab-2" type="button" role="tab"\n            aria-controls="runtab-2" aria-selected="false"\u003eUsing Docker\u003c/button\u003e\n    \u003c/li\u003e\u003c/ul\u003e\n\u003cdiv class="tab-content" id="runtab"\u003e\u003cdiv id="runtab-0" class="tab-pane fade show active" role="tabpanel" aria-labelledby="runtab-0"\u003e\n        \u003cdiv class="highlight"\u003e\u003cpre class="chroma"\u003e\u003ccode class="language-bash" data-lang="bash"\u003e\n./deadsfu https://cameron42.ddns5.com:8443\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n        \u003cdiv id="runtab-1" class="tab-pane fade" role="tabpanel" aria-labelledby="runtab-1"\u003e\n            \u003cdiv class="highlight"\u003e\u003cpre class="chroma"\u003e\u003ccode class="language-bash" data-lang="bash"\u003e\n./deadsfu.exe https://cameron42.ddns5.com:8443\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n        \u003cdiv id="runtab-2" class="tab-pane fade" role="tabpanel" aria-labelledby="runtab-2"\u003e\n            \u003cdiv class="highlight"\u003e\u003cpre class="chroma"\u003e\u003ccode class="language-bash" data-lang="bash"\u003e\ndocker run --network host x186k/deadsfu /app/main https://cameron42.ddns5.com:8443\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp\u003eThe SFU will print some informational mesages.\u003c/p\u003e\n\u003cp\u003eWait 5-20 seconds for this message: \u003ccode\u003eHTTPS READY: Certificate Acquired\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eOpen your browser to the console: \u003ccode\u003ehttps://cameron42.ddns5.com:8443\u003c/code\u003e\u003c/p\u003e\n\u003ch3 id="your-sfu-is-now-ready-to-use"\u003eYour SFU is now ready to use.\u003c/h3\u003e\n\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003eðŸ’¡ \u003c/div\u003e\n  \n    \u003cdiv class="w-100"\u003eInstead of cameron42, you can choose another hostname. When you re-use a hostname, please re-use hostnames from the same IP address. \u003c/div\u003e\n  \n\u003c/div\u003e\n\n\u003ch2 id="open-browser-to-sendreceive-page"\u003eOpen Browser to Send/Receive Page\u003c/h2\u003e\n\u003cp\u003eWith the SFU running, copy the following URL and open it in your browser\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ehttps://cameron42.ddns5.com\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="start-transmitting"\u003eStart Transmitting\u003c/h2\u003e\n\u003cp\u003eOpen one browser tab to the URL you copied.\u003c/p\u003e\n\u003cp\u003eYou should have a camera connected to your system for transmission.\u003c/p\u003e\n\u003cp\u003eHit the \u003ccode\u003eSend\u003c/code\u003e button.\u003c/p\u003e\n\u003cp\u003eYou should see video of yourself as captured from your camera.\u003c/p\u003e\n\u003cp\u003eThis video is being sent to the SFU and ready for distribution.\u003c/p\u003e\n\u003cfigure\u003e\n\u003cimg src="/binaries/send-button.png" border="5" style="height:100%;width:100%;object-fit:contain"\u003e\n\u003c/figure\u003e\n\u003ch2 id="start-receiving"\u003eStart Receiving\u003c/h2\u003e\n\u003cp\u003eOpen one, two, or three browser tabs to the URL you copied.\u003c/p\u003e\n\u003cp\u003eIn each, hit the \u003ccode\u003eReceive\u003c/code\u003e button.\u003c/p\u003e\n\u003cp\u003eIn a second or two, you should see video being relayed from the SFU.\u003c/p\u003e\n\u003cfigure\u003e\n\u003cimg src="/binaries/receive-button.png" border="5" style="height:100%;width:100%;object-fit:contain"\u003e\n\u003c/figure\u003e\n\u003ch2 id="try-simulcast"\u003eTry Simulcast\u003c/h2\u003e\n\u003cp\u003eBy default when you send, you are sending using Simulcast, this means the sending-tab\nis encoding and sending three different levels of video.\u003c/p\u003e\n\u003cp\u003eYou change which of the three simulcast channels you are viewing by using the \u003ccode\u003eChannel\u003c/code\u003e drop down.\u003c/p\u003e\n\u003cfigure\u003e\n\u003cimg src="/binaries/select-channel.png" border="5" style="height:100%;width:100%;object-fit:contain"\u003e\n\u003c/figure\u003e\n\u003ch2 id="next-steps"\u003eNext Steps\u003c/h2\u003e\n\u003cp\u003eThe next step is really seeing how you can scale your video broadcast beyond a single SFU.\u003c/p\u003e\n\u003cp\u003eComing soon!\u003c/p\u003e\n\u003cscript\u003e\nfunction replace(element, from, to) {\n    if (element.childNodes.length) {\n        element.childNodes.forEach(child =\u003e replace(child, from, to))\n    } else {\n        const cont = element.textContent\n        if (cont) element.textContent = cont.replace(from, to)\n    }\n}\n\nvar words = [\'liam\',\'olivia\',\'noah\',\'emma\',\'oliver\',\'ava\',\'cameron\',\'elliott\']\nvar word = words[Math.floor(Math.random() * words.length)]\nvar namenum = word + Math.floor(Math.random() * 1e4)\n\nlet elems = document.querySelectorAll(\'code\')\nfor (i = 0; i \u003c elems.length; i++) {\n  replace(elems[i],"cameron42",namenum)\n}\n\u003c/script\u003e \n'}).add({id:2,href:"https://deadsfu.com/3419512222/docs/tutorials/obsinput/",title:"OBS-in, Browser-out with FTL",description:"How to run DeadSFU.",content:'\u003ch3 id="start-the-sfu"\u003eStart the SFU:\u003c/h3\u003e\n\u003cp\u003eYou should have a \u003ccode\u003edeadsfu\u003c/code\u003e or \u003ccode\u003edeadsfu.exe\u003c/code\u003e, or\nbe pulled the Docker image.\u003c/p\u003e\n\u003cul class="nav nav-tabs" id="runtab" role="tablist"\u003e\u003cli class="nav-item"\u003e\n        \u003cbutton data-bs-toggle="tab" class="nav-link active" data-bs-target="#runtab-0" type="button" role="tab"\n            aria-controls="runtab-0" aria-selected="true"\u003eLinux or macOS\u003c/button\u003e\n    \u003c/li\u003e\n    \n    \u003cli class="nav-item"\u003e\n        \u003cbutton data-bs-toggle="tab" class="nav-link" data-bs-target="#runtab-1" type="button" role="tab"\n            aria-controls="runtab-1" aria-selected="false"\u003eWindows\u003c/button\u003e\n    \u003c/li\u003e\n    \u003cli class="nav-item"\u003e\n        \u003cbutton data-bs-toggle="tab" class="nav-link" data-bs-target="#runtab-2" type="button" role="tab"\n            aria-controls="runtab-2" aria-selected="false"\u003eUsing Docker\u003c/button\u003e\n    \u003c/li\u003e\u003c/ul\u003e\n\u003cdiv class="tab-content" id="runtab"\u003e\u003cdiv id="runtab-0" class="tab-pane fade show active" role="tabpanel" aria-labelledby="runtab-0"\u003e\n        \u003cdiv class="highlight"\u003e\u003cpre class="chroma"\u003e\u003ccode class="language-bash" data-lang="bash"\u003e\n\u003cspan class="c1"\u003e# you can use your name+number if you like\u003c/span\u003e\n./deadsfu https://cameron42.ddns5.com:8443\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n        \u003cdiv id="runtab-1" class="tab-pane fade" role="tabpanel" aria-labelledby="runtab-1"\u003e\n            \u003cdiv class="highlight"\u003e\u003cpre class="chroma"\u003e\u003ccode class="language-bash" data-lang="bash"\u003e\n\u003cspan class="c1"\u003e# you can use your name+number if you like\u003c/span\u003e\n./deadsfu.exe https://cameron42.ddns5.com:8443\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n        \u003cdiv id="runtab-2" class="tab-pane fade" role="tabpanel" aria-labelledby="runtab-2"\u003e\n            \u003cdiv class="highlight"\u003e\u003cpre class="chroma"\u003e\u003ccode class="language-bash" data-lang="bash"\u003e\ndocker run --network host x186k/deadsfu /app/main https://cameron42.ddns5.com:8443\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\n\u003ch3 id="wait-for-the-https-certificate-to-be-aquired"\u003eWait for the HTTPS-certificate to be aquired:\u003c/h3\u003e\n\u003cp\u003eThe first time aquiring the cert it can take a little while.\u003cbr\u003e\nUsually it takes under 10 seconds, although it can take up to 30 seconds.\u003cbr\u003e\nPlease re-use hostnames when possible, this will save you time from waiting, and reduce our load.\u003c/p\u003e\n\u003ch3 id="your-sfu-is-now-ready-to-use"\u003eYour SFU is now ready to use.\u003c/h3\u003e\n\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003eðŸ’¡ \u003c/div\u003e\n  \n    \u003cdiv class="w-100"\u003eYou can use whatever hostname you want in front of .ddns5.com, but it will save you trouble if you choose a word unlikley to be used by other people. It will also save you time, if you keep re-using the same set of hostnames. We suggest a set of less than ten (hostnames) to be gracious. \u003c/div\u003e\n  \n\u003c/div\u003e\n\n\u003ch2 id="open-browser-to-sendreceive-page"\u003eOpen Browser to Send/Receive Page\u003c/h2\u003e\n\u003cp\u003eWith the SFU running, copy the following URL and open it in your browser\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ehttps://cameron42.ddns5.com\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="start-transmitting"\u003eStart Transmitting\u003c/h2\u003e\n\u003cp\u003eOpen one browser tab to the URL you copied.\u003c/p\u003e\n\u003cp\u003eYou should have a camera connected to your system for transmission.\u003c/p\u003e\n\u003cp\u003eHit the \u003ccode\u003eSend\u003c/code\u003e button.\u003c/p\u003e\n\u003cp\u003eYou should see video of yourself as captured from your camera.\u003c/p\u003e\n\u003cp\u003eThis video is being sent to the SFU and ready for distribution.\u003c/p\u003e\n\u003cfigure\u003e\n\u003cimg src="/binaries/send-button.png" border="5" style="height:100%;width:100%;object-fit:contain"\u003e\n\u003c/figure\u003e\n\u003ch2 id="start-receiving"\u003eStart Receiving\u003c/h2\u003e\n\u003cp\u003eOpen one, two, or three browser tabs to the URL you copied.\u003c/p\u003e\n\u003cp\u003eIn each, hit the \u003ccode\u003eReceive\u003c/code\u003e button.\u003c/p\u003e\n\u003cp\u003eIn a second or two, you should see video being relayed from the SFU.\u003c/p\u003e\n\u003cfigure\u003e\n\u003cimg src="/binaries/receive-button.png" border="5" style="height:100%;width:100%;object-fit:contain"\u003e\n\u003c/figure\u003e\n\u003ch2 id="try-simulcast"\u003eTry Simulcast\u003c/h2\u003e\n\u003cp\u003eBy default when you send, you are sending using Simulcast, this means the sending-tab\nis encoding and sending three different levels of video.\u003c/p\u003e\n\u003cp\u003eYou change which of the three simulcast channels you are viewing by using the \u003ccode\u003eChannel\u003c/code\u003e drop down.\u003c/p\u003e\n\u003cfigure\u003e\n\u003cimg src="/binaries/select-channel.png" border="5" style="height:100%;width:100%;object-fit:contain"\u003e\n\u003c/figure\u003e\n\u003ch2 id="next-steps"\u003eNext Steps\u003c/h2\u003e\n\u003cp\u003eThe next step is really seeing how you can scale your video broadcast beyond a single SFU.\u003c/p\u003e\n\u003cp\u003eComing soon!\u003c/p\u003e\n\u003cscript\u003e\nfunction replace(element, from, to) {\n    if (element.childNodes.length) {\n        element.childNodes.forEach(child =\u003e replace(child, from, to))\n    } else {\n        const cont = element.textContent\n        if (cont) element.textContent = cont.replace(from, to)\n    }\n}\n\nvar words = [\'liam\',\'olivia\',\'noah\',\'emma\',\'oliver\',\'ava\',\'cameron\',\'elliott\']\nvar word = words[Math.floor(Math.random() * words.length)]\nvar namenum = word + Math.floor(Math.random() * 1e4)\n\nlet elems = document.querySelectorAll(\'code\')\nfor (i = 0; i \u003c elems.length; i++) {\n  replace(elems[i],"cameron42",namenum)\n}\n\u003c/script\u003e \n'}).add({id:3,href:"https://deadsfu.com/3419512222/docs/help/getting-help/",title:"Getting Help",description:"Answers to frequently asked questions.",content:'\u003ch2 id="slack"\u003eSlack\u003c/h2\u003e\n\u003cp\u003e\u003cem\u003eIn the DeadSDU Slack group you can get help\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca class="btn btn-primary btn-lg px-4 mb-2" href="https://join.slack.com/t/deadsfu/shared_invite/zt-sv23oa10-XFFYoJHPty8BtuCmBthH_A" role="button"\u003eJoin Slack\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id="email-the-author"\u003eEmail the author?\u003c/h2\u003e\n\u003cp\u003eSend \u003ccode\u003ecameron elliott\u003c/code\u003e a message:\u003c/p\u003e\n\u003cp\u003e\u003ca class="btn btn-primary btn-lg px-4 mb-2" href="mailto:cameron@cameronelliott.com" role="button"\u003eEmail author\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eMy email is cameron@cameronelliott.com if the mailto link isn\u0026rsquo;t doing it for you.\u003c/p\u003e\n'}).add({id:4,href:"https://deadsfu.com/3419512222/docs/help/",title:"Help",description:"Help Doks.",content:""}).add({id:5,href:"https://deadsfu.com/3419512222/docs/",title:"Docs",description:"Docs Doks.",content:""}),userinput.addEventListener('input',c,!0),suggestions.addEventListener('click',e,!0);function c(){var h=this.value,f=b.search(h,{limit:5,index:["content"],enrich:!0}),g=suggestions.childNodes,e=0,i=f.length,c;for(suggestions.classList.remove('d-none'),f.forEach(function(b){c=document.createElement('div'),c.innerHTML='<a href><span></span><span></span></a>',a=c.querySelector('a'),t=c.querySelector('span:first-child'),d=c.querySelector('span:nth-child(2)'),a.href=b.result[e].doc.href,t.textContent=b.result[e].doc.title,d.textContent=b.result[e].doc.description,suggestions.appendChild(c)});g.length>i;)suggestions.removeChild(g[e])}function e(){while(suggestions.lastChild)suggestions.removeChild(suggestions.lastChild);return!1}})()